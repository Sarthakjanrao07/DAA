#include <iostream>
using namespace std;

void input(int weight[], int profit[], int n)
{

    for (int i = 0; i < n; i++)
    {
        cout << "Enter the Element in weight: " << endl;
        cin >> weight[i];
    }
    for (int i = 0; i < n; i++)
    {
        cout << "Enter the Element in profit: " << endl;
        cin >> profit[i];
    }
}

void output(int weight[], int profit[], int n)
{
    cout << "\nWeight\tProfit" << endl;
    for (int i = 0; i < n; i++)
    {
        cout << weight[i] << "\t" << profit[i] << endl;
    }
}

int max(int a, int b)
{
    if (a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
}

int knapS(int W, int wt[], int val[], int n)
{
    int i, w;
    int K[n + 1][W + 1];

    for (int i = 0; i <= n; i++)
    {
        for (int w = 0; w <= W; w++)
        {
            if (i == 0 || w == 0)
                K[i][w] = 0;
            else if (wt[i - 1] <= w)
                K[i][w] = max(val[i - 1] + K[i - 1][w - wt[i - 1]], K[i - 1][w]);
            else
                K[i][w] = K[i - 1][w];
        }
    }

    for (int i = 0; i <= n; i++)
    {
        cout << "\n";
        for (w = 0; w <= W; w++)
        {
            cout << " " << K[i][w] << " ";
        }
    }
    cout << "\n";
    return K[n][W];
}

int main()
{

    int W;
    cout << "\nEnter the max Capacity of knaopsack: " << endl;
    cin >> W;

    int weight[4];
    int profit[4];

    input(weight, profit, 4);
    output(weight, profit, 4);

    int TP = knapS(W, weight, profit, 4);
    cout << "\nTotal Profit=> " << TP;

    return 0;
}
